import{d as O,u as h,ap as A,n as D,o as N,c as g,F as T,B as w,p as B,w as _,e as S,m as k,q as P,V as G,s as K,r as L,i as M,k as f}from"./index-BhGVanJs.js";import{h as o}from"./moment-zH0z38ay.js";import{u as V}from"./Sessions-BbabeFQp.js";const W=O({__name:"SessionFilter",props:{selectColors:{default:[]},selectColorsModifiers:{}},emits:["update:selectColors"],setup(n){const{t:a}=h(),i=A(n,"selectColors"),u=D(()=>[{id:"BOOKED",color:"primary",tooltip:a("calendar.confirmed")},{id:"PENDING_BY_THERAPIST",color:"warning",tooltip:a("calendar.waitingTherapist")},{id:"PENDING_BY_CLIENT",color:"secondary",tooltip:a("calendar.waitingClient")},{id:"INVALID",color:"error",tooltip:a("calendar.invalid")},{id:"OPEN_FOR_BOOKING",color:"grey200",tooltip:a("calendar.free")}]),p=d=>{i.value=i.value.map(r=>r.id===d?{id:r.id,isActive:!r.isActive}:r)};return i.value=u.value.map(d=>({id:d.id,isActive:!0})),(d,r)=>{const m=L("CheckIcon");return N(),g("div",null,[(N(!0),g(T,null,w(u.value,c=>(N(),B(K,{key:c.id,text:c.tooltip},{activator:_(({props:C})=>[S(G,P({onClick:v=>p(c.id),ref_for:!0},C,{color:c.color,size:"x-small",class:"[&:not(:last-child)]:tw-mr-2 [&:not(:last-child)]:md:tw-mr-3",icon:""}),{default:_(()=>{var v;return[(v=i.value.find(e=>e.id===c.id))!=null&&v.isActive?(N(),B(m,{key:0,width:"16"})):k("",!0)]}),_:2},1040,["onClick","color"])]),_:2},1032,["text"]))),128))])}}});function X(){const{t:n}=h(),a=V(),i=M(),u=f(!1),p=f(!1),d=f(!1),r=f(!1),m=f(!1),c=f(!1),C=f([]),v={id:0,note:"",paid:"",status:"",startsAt:"",currency:"",dailyCoUrl:null,paymentLink:null,costInCents:0,durationInMinutes:0,isRecurring:!1,dailyCoTherapistToken:"string",dailyCoClientToken:"string",room:{dailyCoUrl:"string"},service:{description:"",id:0,title:""},opponent:{id:0,uuid:"",type:"Client",email:"",phone:"",zoneId:"",avatar:"",isAdmin:!1,language:"",lastName:"",birthday:"",firstName:"",createdAt:"",darkTheme:!1,stripeAttached:!1,muteNotifications:!1}},e=f(v);return{form:e,loading:u,recurring:c,loadingBook:p,dialogEvent:r,selectColors:C,formTemplate:v,dialogDelete:m,loadingDelete:d,typeName:(t,s,l)=>o(s).add(l+5,"minutes").isBefore(o())?n("sessions.passed"):t==="BOOKED"?n("sessions.booked"):t==="PENDING_BY_THERAPIST"?n("sessions.pendingByTherapist"):t==="PENDING_BY_CLIENT"?n("sessions.pendingByClient"):t==="INVALID"?"Invalid":n("sessions.openForBooking"),colorType:(t,s,l)=>o(s).add(l+5,"minutes").isBefore(o())?"default":t==="BOOKED"?"primary":t==="PENDING_BY_THERAPIST"?"warning":t==="PENDING_BY_CLIENT"?"secondary":t==="INVALID"?"error":"default",deleteItem:t=>{m.value=!0,t&&(c.value=t)},bookSession:async t=>{p.value=!0;try{const s={startsAt:o(e.value.startsAt).valueOf(),status:e.value.status,id:e.value.id,clientId:e.value.opponent.id,durationMinutes:e.value.durationInMinutes,costInCents:e.value.costInCents,currency:e.value.currency};s.status==="PENDING_BY_CLIENT"&&(s.status="BOOKED"),s.status==="OPEN_FOR_BOOKING"&&(s.status="BOOKED"),await a.changeSessions(s),t&&await t(),i.createNotification({title:n("notification.sessionChange"),color:"success"}),r.value=!1}catch{i.createNotification({title:n("notification.errorNotification"),color:"error"})}p.value=!1},confirmEdit:async t=>{u.value=!0;try{const s={id:e.value.id,clientId:e.value.opponent.id,costInCents:e.value.costInCents,currency:e.value.currency,durationMinutes:e.value.durationInMinutes,status:e.value.status,isRecurring:!1,startsAt:o(e.value.startsAt).valueOf(),note:""};e.value.note&&(s.note=e.value.note),e.value.isRecurring&&(s.occurrenceStartsAt=e.value.occurrenceStartsAt),await a.changeSessions(s),t&&await t(),i.createNotification({title:n("notification.sessionChange"),color:"success"}),r.value=!1}catch{i.createNotification({title:n("notification.errorNotification"),color:"error"})}u.value=!1},disableCard:(t,s)=>{const l=o(),I=o(t).add(s,"minutes");return o(l).isAfter(I)},confirmDelete:async t=>{d.value=!0;try{c.value?await a.deleteSessions(e.value.id):await a.deleteSessions(e.value.id,o(e.value.startsAt).valueOf()),t&&await t(),i.createNotification({title:n("notification.sessionDelete"),color:"success"}),r.value=!1,m.value=!1}catch{i.createNotification({title:n("notification.errorNotification"),color:"error"})}d.value=!1},isDeleteSession:(t,s)=>{const l=o(),I=o(t).add(s,"minutes"),y=o(t);return i.user.type==="Therapist"?o(l).isBefore(I):o(l).isBefore(y)},isAbleToJoinSession:(t,s,l)=>{const I=o(),y=o(t).add(-5,"minutes"),E=o(t).add(s,"minutes").add(5,"minutes");return o(I).isBetween(y,E,void 0,"[]")&&l==="BOOKED"},changeInvalidSession:async t=>{u.value=!0;try{const s={id:e.value.id,clientId:e.value.opponent.id,startsAt:o(e.value.startsAt).valueOf(),durationMinutes:e.value.durationInMinutes,status:e.value.status,costInCents:e.value.costInCents,currency:e.value.currency,note:""};e.value.note&&(s.note=e.value.note),s.status="BOOKED",await a.changeSessions(s),t&&await t(),i.createNotification({title:n("notification.sessionChange"),color:"success"}),r.value=!1}catch{i.createNotification({title:n("notification.errorNotification"),color:"error"})}u.value=!1}}}export{W as _,X as u};
