import{aq as o,ar as s}from"./index-rKzDa4TW.js";import{h as n}from"./moment-zH0z38ay.js";const c=o({id:"Sessions",state:()=>({list:[],total:0,calendars:[],calendarsTotal:0,alertSessionList:[],availability:null}),actions:{async getSessions(t={},a=!0){const{data:e}=await s.get("api/session",{params:{from:n().add(-2,"hours").valueOf(),to:n().add(2,"hours").valueOf(),status:["BOOKED"],limit:9999}});if(this.alertSessionList=e.list,a){const{data:i}=await s.get("api/session",{params:t});if(this.list=i.list,this.total=i.total,i)return i}},async getSession(t){const{data:a}=await s.get(`api/session/${t}`);return a},async getCronofyCalendars(t={}){const{data:a}=await s.get("api/cronofy/calendars",{params:{...t}});return this.calendars=a.list,this.calendarsTotal=a.total,a},async getInstantSession(t={}){const{data:a}=await s.get("api/session/instant",{params:t});return a},async getAvailability(t={}){const{data:a}=await s.get("api/session/availability",{params:t});return this.availability=a,a},async createSessions(t={}){const{data:a}=await s.post("api/session",t);return a},async changeAvailability(t){const{data:a}=await s.put("api/session/availability",t);return this.availability=a,this.getAvailability(),a},async changeSessions(t={}){const{data:a}=await s.put("api/session",t);return a},async deleteSessions(t,a=null){if(a){const{data:i}=await s.delete(`api/session/${t}`,{params:{startsAt:a}});return i}const{data:e}=await s.delete(`api/session/${t}`);return e},async deleteCronofyCalendar(t){const{data:a}=await s.delete(`api/cronofy/calendars/${t}`);return await this.getCronofyCalendars(),a}}});export{c as u};
